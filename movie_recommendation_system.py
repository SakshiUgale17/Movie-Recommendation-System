# -*- coding: utf-8 -*-
"""Movie Recommendation System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OCEm5AjiXj-WNAhcqW504BXMYyv5rWzx
"""

import pandas as pd

import numpy as np

df=pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/Movies%20Recommendation.csv')

df

df.head

df.info

df.describe

df.shape

df.columns

df_features=df[['Movie_Genre','Movie_Keywords', 'Movie_Tagline', 'Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features



X=df_features['Movie_Genre']+' '+df_features['Movie_Keywords']+' '+df_features['Movie_Tagline']+' '+df_features['Movie_Cast']+' '+df_features['Movie_Director']

X.shape

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf=TfidfVectorizer()

X=tfidf.fit_transform(X)

X.shape

print(X)

from sklearn.metrics.pairwise import cosine_similarity

Similarity_Score=cosine_similarity(X)

Similarity_Score

Similarity_Score.shape

"""Get Movie Name as input from user and validate for closest spelling"""

Favourite_Movie_Name=input('Enter your favourite movie name: ')

All_Movies_Title_List=df['Movie_Title'].tolist()

import difflib

Movie_Recommendation=difflib.get_close_matches(Favourite_Movie_Name,All_Movies_Title_List)
print(Movie_Recommendation)

Close_Match=Movie_Recommendation[0]

Index_of_Close_Match_Movie=df[df.Movie_Title==Close_Match]['Movie_ID'].values[0]
print(Index_of_Close_Match_Movie)

#getting a list of similar movies
Recommendation_Score=list(enumerate(Similarity_Score[Index_of_Close_Match_Movie]))
print(Recommendation_Score)

len(Recommendation_Score)

"""Get all movies sort based on recommendation score wrt favourite movie"""

#sorting the movies based on their similarity score
Sorted_Similar_Movies=sorted(Recommendation_Score,key= lambda x:x[1], reverse=True)
print(Sorted_Similar_Movies)



